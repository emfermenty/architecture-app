// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using architectureProject.Data;

#nullable disable

namespace architectureProject.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("architectureProject.Models.Shipping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<double>("Distance")
                        .HasColumnType("double precision");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("interval");

                    b.Property<int>("ShippingType")
                        .HasColumnType("integer");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("VehicleId1")
                        .HasColumnType("uuid");

                    b.Property<double>("Volume")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("TrackingNumber")
                        .IsUnique();

                    b.HasIndex("VehicleId");

                    b.HasIndex("VehicleId1");

                    b.ToTable("Shippings");

                    b.HasDiscriminator<int>("ShippingType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("architectureProject.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("FuelConsumption")
                        .HasColumnType("double precision");

                    b.Property<double>("MaxVolume")
                        .HasColumnType("double precision");

                    b.Property<double>("MaxWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<double>("Speed")
                        .HasColumnType("double precision");

                    b.Property<int>("VehicleType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<int>("VehicleType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("architectureProject.Models.AirShipping", b =>
                {
                    b.HasBaseType("architectureProject.Models.Shipping");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("architectureProject.Models.SeaShipping", b =>
                {
                    b.HasBaseType("architectureProject.Models.Shipping");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("architectureProject.Models.TrainShipping", b =>
                {
                    b.HasBaseType("architectureProject.Models.Shipping");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("architectureProject.Models.TruckShipping", b =>
                {
                    b.HasBaseType("architectureProject.Models.Shipping");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("architectureProject.Models.CargoPlain", b =>
                {
                    b.HasBaseType("architectureProject.Models.Vehicle");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("architectureProject.Models.CargoShip", b =>
                {
                    b.HasBaseType("architectureProject.Models.Vehicle");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("architectureProject.Models.FreightTrain", b =>
                {
                    b.HasBaseType("architectureProject.Models.Vehicle");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("architectureProject.Models.Truck", b =>
                {
                    b.HasBaseType("architectureProject.Models.Vehicle");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("architectureProject.Models.Shipping", b =>
                {
                    b.HasOne("architectureProject.Models.Vehicle", null)
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("architectureProject.Models.Vehicle", "Vehicle")
                        .WithMany("Shippings")
                        .HasForeignKey("VehicleId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("architectureProject.Models.Vehicle", b =>
                {
                    b.Navigation("Shippings");
                });
#pragma warning restore 612, 618
        }
    }
}
